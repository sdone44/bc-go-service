package main

import (
	"database/sql"
	"fmt"
	"log"
	"os"

	_ "github.com/go-sql-driver/mysql"
	"github.com/joho/godotenv"
)

func main() {
	err := godotenv.Load()
	if err != nil {
		log.Fatal("Failed to load .env file:", err)
	}

	dbase := os.Getenv("DB_DATABASE")
	prefix := os.Getenv("DB_PREFIX")
	username := os.Getenv("DB_USERNAME")
	password := os.Getenv("DB_PASSWORD")
	port := os.Getenv("DB_PORT")
	host := os.Getenv("DB_HOST")
	// 设置数据库连接信息
	dsn := username + ":" + password + "@tcp" + "(" + host + ":" + port + ")/"
	// 连接MySQL数据库
	db, err := sql.Open("mysql", dsn)
	if err != nil {
		panic(err.Error())
	}
	defer db.Close()

	// 创建数据库
	_, err = db.Exec("CREATE DATABASE IF NOT EXISTS " + dbase)
	if err != nil {
		panic(err.Error())
	}

	// 切换到新创建的数据库
	_, err = db.Exec("USE " + dbase)
	if err != nil {
		panic(err.Error())
	}

	// 创建数据表
	tableName_1 := prefix + "block_number"
	tableSql_1 := fmt.Sprintf(`
	CREATE TABLE IF NOT EXISTS %s (
		id int(11) unsigned NOT NULL AUTO_INCREMENT,
		block_num int(11) NOT NULL DEFAULT 0,
		block_hash varchar(100) NOT NULL DEFAULT '',
		block_transactions longtext DEFAULT '',
		response_code int(8) NOT NULL DEFAULT 0,
		status tinyint(4) NOT NULL DEFAULT 0,
		PRIMARY KEY (id),
		UNIQUE KEY block_num (block_num) USING BTREE
	  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;`, tableName_1)

	result, err := db.Exec(tableSql_1)
	if err != nil {
		panic(err.Error())
	}
	rowsAffected_1, err := result.RowsAffected()
	if err != nil {
		panic(err)
	}
	if rowsAffected_1 > 0 {
		fmt.Printf("创建表[%v]成功\n", tableName_1)
	}

	tableName_2 := prefix + "block_transactions"
	tableSql_2 := fmt.Sprintf(`
	CREATE TABLE IF NOT EXISTS %s (
		id int(11) unsigned NOT NULL AUTO_INCREMENT,
		block_num int(11) NOT NULL DEFAULT 0,
		trans_hash varchar(100) NOT NULL DEFAULT '',
		`+"`from`"+` varchar(100) NOT NULL,
		`+"`to`"+` varchar(100) NOT NULL,
		input longtext DEFAULT '',
		decode_input longtext DEFAULT '',
		is_contract tinyint(4) NOT NULL DEFAULT 0,
		method_id varchar(20) DEFAULT NULL,
		output longtext DEFAULT '',
		decode_output longtext DEFAULT '',
		status int(10) NOT NULL DEFAULT -1,
		gas_used varchar(100) NOT NULL DEFAULT '0',
		import_time bigint(20) unsigned NOT NULL DEFAULT 0
		PRIMARY KEY (id),
		UNIQUE KEY trans_hash (trans_hash) USING BTREE,
		KEY `+"`from`"+` (`+"`from`"+`) USING BTREE,
		KEY `+"`to`"+` (`+"`to`"+`) USING BTREE
	  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;`, tableName_2)

	_, err = db.Exec(tableSql_2)
	if err != nil {
		panic(err.Error())
	}
	rowsAffected_2, err := result.RowsAffected()
	if err != nil {
		panic(err)
	}
	if rowsAffected_2 > 0 {
		fmt.Printf("创建表[%v]成功\n", tableName_2)
	}

	fmt.Println("数据库加载成功！\n")
}
